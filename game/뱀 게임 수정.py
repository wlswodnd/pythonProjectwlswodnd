# 1. 게임에 필요한 라이브러리를 import--------------------------------------------------------------------------------------
import pygame   # 파이 게임 풀러오기
from pygame.locals import QUIT , Rect , KEYDOWN , K_UP , K_LEFT , K_RIGHT , K_DOWN
                        # 종료   그리기  키눌렸을때  위키    왼키       오키       아래키
import random   # 난수 풀러오기
import sys  # 시스템 파일 불러오기

# 2. 게임에 필요한 기본설정------------------------------------------------------------------------------------------------
pygame.init()   # 파이 게임 초기화 하기
화면 = pygame.display.set_mode((1000,1000))   # 화면 구성
프레임 = pygame.time.Clock()   # 프레임에 파이게임 시간 설정
# frame per second(fps) : 초당 프레임 수

음식 = [] # 여러개의 음식을 저장할 리스트
뱀 = []  # 여러개 뱀 꼬리를 저장할 리스트
( 가로 , 세로 ) = (50,50)   # 가로 세로 길이 # 튜플 선언
점수 = 0  # 점수 변수 선언
게임종료메시지 = 0 # 게임종료메시지 선언
단계 = 0
계산 = 0
배경 = pygame.image.load("우주.jpg") # 배경 정하기
pygame.mixer.music.load('audio_7ac09a1714.mp3') # 배경소리 넣기
pygame.mixer.music.play(-1)   # 계속 반복하기
# 3, 함수 만들기----------------------------------------------------------------------------------------------------------
# 1. 음식 함수 ==========
def 음식생성() : # 음식 생성 함수 선언
    while True : # 계속 반복하기
        위치 = ( random.randint( 0 , 가로-1 ) , random.randint( 0 , 세로-1 ))
                        # 0 ~ 49 사이의 난수 생성
        if 위치 in 음식 or 위치 in 뱀 :    # 해당 위치에 음식이나 뱀이 있으면
            continue    #  반복문 다시 실행
        else:   # 아니면
            음식.append( 위치 ) # 음식 리스트에 해당 위치 추가
            break # 반복문 끝내기

# 2. 음식 이동 함수 ==========
def 음식이동(위치) : # 음식이동 함수 선언
    임의변수 = 음식.index( 위치 ) # 해당 위치에 음식 찾기
    del 음식[임의변수]    # 해당 위치에 음식 삭제
    음식생성() # 음식생성 함수 호출 [ 새로운 음식 생성 ]

# 3. 그리기 함수 ==========
def 그리기(점수판,게임종료메시지) :    # 그리기 함수 선언
    화면.blit( 배경 ,(0,0)) # 화면색상 색으로 칠하기

    # 음식 그리기
    for food in 음식 :    # 음식 리스트의 개수 만큼 반복하기
        pygame.draw.ellipse( 화면 , ( 255,255,0  ) , Rect( food[0]*20 , food[1]*20 , 20 ,20 ) )
                # 음식 그리기(타원)      색                 가로              세로

    # 뱀 그리기
    for body in 뱀 :    # 뱀 리스트의 개수 만큼 반복하기
        pygame.draw.rect( 화면 , (255,255,255) , Rect( body[0]*20 , body[1]*20 , 20 ,20 ) )
                # 음식 그리기(타원)   색                 가로                  세로

    # 점수 그리기
    if 점수판 != None :    # 점수에 내용이 있으면
        화면.blit(점수판,(10,10))    # 점수판 위치

    # 종료 메시지 그리기
    if 게임종료 : # 게임종료 메시지가 내용이 있으면
        게임종료메시지 = my글꼴1.render("게임종료 점수 : " + str(점수), True, (255, 255, 255))
        화면.blit(게임종료메시지,(375,400))

    pygame.display.update() # 화면 업데이트

# 4. 게임 실행-----------------------------------------------------------------------------------------------------------
my글꼴 = pygame.font.SysFont( "malgungothic",30)  # 글꼴 글자 크기 정하기
my글꼴1 = pygame.font.SysFont( "malgungothic",50)  # 글꼴 글자 크기 정하기

키 = K_UP  # 위키
게임종료 = False # 게임 종료 스위치
뱀.append((int(세로/2),int(가로/2))) # 뱀을 화면 정 가운데로 이동

for i in range(50) : # 30가의 음식 생성
    음식생성()  # 음식생성 함수 호출

while True :    # 계속 반복하기
    # 키보드 동작하기
    for 동작 in pygame.event.get() :    # 파이게임 이벤트가 있다면
        if 동작.type == QUIT : # 이벤트가 종료라면
            pygame.quit()   # 파이게임 종료하기
            sys.exit()  # 모든 코드 종료
        elif 동작.type == KEYDOWN  :  # 이벤트가 키을 눌렸을 떄 라면
            키 = 동작.key  # 키 변수 동작한 키 저장하기

# 키가 눌렸을 때
    if not 게임종료 :   # 만약에 게임 종료가 아니라면
        if 키 == K_LEFT :    # 키가 왼쪽키라면
            머리 = ( 뱀[0][0] -1 , 뱀[0][1] )    # 뱀을 왼쪽으로 이동
        elif 키 == K_RIGHT:  # 키가 오른쪽키라면
            머리 = ( 뱀[0][0] + 1, 뱀[0][1] )  # 뱀을 왼쪽으로 이동
        elif 키 == K_UP:  # 키가 위쪽키라면
            머리 = ( 뱀[0][0] , 뱀[0][1] - 1)  # 뱀을 위쪽으로 이동
        elif 키 == K_DOWN:  # 키가 아래쪽키라면
            머리 = ( 뱀[0][0] , 뱀[0][1] + 1)  # 뱀을 아래쪽으로 이동

# 뱀 몸 또는 화면 밖으로 나가기
        if 머리 in 뱀 or 머리[0] < 0 or 머리[0] >= 세로 or 머리[1] < 0 or 머리[1] >= 가로 :   # 뒤로가거나 몸이나 벽에 다으면
            게임종료 = True

# 뱀 머리 추가
        뱀.insert(0,머리) # 뱀 머리 추가 하기

# 음식을 먹었을 때가 아니면 추가x
        if 머리 in 음식 :   # 만약에 머리가 음식에 닿았을 떄
            음식이동(머리)    # 음식이동 함수 호출
            점수 += 1 # 점수에 1 더하기
        else: # 아니면
            뱀.pop() # 뱀 꼬리 삭제


        점수판 = my글꼴.render("현재 점수는 : "+str(점수),True,(255,255,255)) # 점수판 설정

    if 점수 / 10+계산 == 1+(계산/10) : # 10단위 마다
        단계 +=5  # 단계에 5 더하기
        계산 += 10 # 계산에 10 더하기
    그리기(점수판,게임종료메시지)  # 그리기 함수 호출
    프레임.tick(5+단계) # 초당 5 프레임으로 설정