# 1. print 함수
# 정의 : 괄호 안에 있는 문자열,숫자,변수,리스트 등을 출력하는 함수이다
# 사용방법 :  print("python")

# 2. type () int() str() float() 함수
# 정의 : type 함수는 데이터의 타입을 확인 할 수 있는 함수이다
#       int 함수는 정수로 바꾸어 주는 함수이다
#       str 함수는 문자로 바꾸어 주는 함수이다
#       float 함수는 실수로 바꾸어
# 사용방법 : type(a) int(a) str(a) float(a)

# 3. 인덱싱
# 정의 : 인덱싱이란 그 단어에 번호을 매기는 것이다

# 4. 슬라이싱
# 정의 : 슬라이싱이란 단어에 범위을 정해 주는 것이다
# 사용방법 : 단어[시작값:끝값:범위]

# 5. replace() 함수
# 정의 : 문자나 문자열을 치환하는 함수이다
# 사용방법 : 문자열.replace(찾는 단어,바꿀 단어[횟수])

# 6. split 함수
# 정의 : 문자열을 기준에 따라 나누는 함수이다
# 사용 방법 : 문자열.split("기준")

# 7. 수식 기호을 이용한 formmitting
# 정의 : 문자열을 만들때 변수를 삽입해 만드는 방법이다
# 사용방법 :  ( "문자열1 %s,d 문자열2 %s,d" % (변수,변수) ) %s : 문자 형식    %d : 정수 형식

# 8. format함수
# 정의 : 문자열을 만들때 변수를 삽입해 만드는 방법이다
# 사용 방법 : '{0},{1},{2},{3}'.format(문자,변수)

# 9. f-string 함수
# 정의 : 문자열을 만들때 변수를 삽입해 만드는 방법이다
# 사용방법 : (f"문자열1 {변수1} 문자열2 {변수2}")

# 10 . strip 함수
# 정의 : 문자열의 양 끝의 공백을 지우거나 특정한 문자을 지운다
# 사용방법 : "  문자열  ".string("조건")

# 11. upper 함수
# 정의 : 문자열을 대문자로 바꿔주는 함수이다
# 사용방법 : 문자열.upper()

# 12. lower 함수
# 정의 : 문자열을 소문자로 바꿔주는 함수이다
# 사용방법 : 문자열.lower()

# 13. capitalize 함수
# 정의 : 문자열의 첫 글짜을 대문자로 바꿔주는 함수이다
# 사용방법 : 문자열.capitalize()

# 14. endswith 함수
# 정의 : 문자열의 맨 뒤 단어가 조건과 맞는지 확인해 준다
# 사용방법 : 문자열.endswith("조건")

# 15. startswith 함수
# 정의 : 문자열의 맨 앞 단어가 조건과 맞는지 확인해 준다
# 사용방법 : 문자열.startswith("조건")

# 16. rstrip 함수
# 정의 : 문자열의 오른쪽의 공백을 지우거나 특정한 문자을 지운다
# 사용방법 : "  문자열  ".rstring("조건")

# 17. 변수
# 정의 : 변수는 하나의 저장 공간이다 여러개 저장x
# 사용방법 : 변수 = 0

# 18. 리스트
# 정의 : 리스트는 [ ]안에 여러개의 변수을 저장 할 수 있다 여러개 저장o
# 사용방법 : 리스트 = [ 변수1 , 변수2, 변수3, ]

# 19. append() 함수
# 정의 : 리스트의 맨 뒤에 변수을 추가 한다
# 사용방법 : 리스트명.append("변수")

# 20. insert() 함수
# 정의 : 변수을 리스트의 해당 인덱스에 추가한다
# 사용방법 : 리스트명.insert(인덱스,변수)

# 21. del
# 정의 : del은 리스트에 해당 인덱스에 해당하는 변수를 삭제한다
# 사용방법 : del 리스트명[인덱스]

# 22. max 함수
# 정의 : max 함수는 리스트내 가장 큰 값을 찾아주는 함수이다
# 사용방법 : max(리스트명)

# 23. min 함수
# 정의 : min 함수는 리스트내 가장 작은 값을 찾아주는 함수이다
# 사용방법 : min(리스트명)

# 24. sum 함수
# 정의 : sum 함수는 리스트내 정수의 총합을 구해주는 함수이다
# 사용방법 : sum(리스트명)

# 25. len 함수
# 정의 : len 함수는 리스트의 변수의 개수을 구해주는 방법이다
# 사용방법 : len(리스트명)

# 25. sort 함수
# 정의 : sort 함수는 리스트를 오름차순으로 정렬 해주는 함수이다
# 사용방법 : 리스트명.sort()

# 26. reverse 함수
# 정의 : reverse 함수는 리스트를 내림차순으로 정렬 해주는 함수이다
# 사용방법 : 리스트명.reverse()

# 27. 데이터를 저장하는 방법
# 변수 : 1개의 데이터만 저장 가능 / 여러개 X 바꾸기 o
# 리스트 : 여러개의 데이터를 저장 가능 / 여러개 o 바꾸기 o
# 딕셔너리 : 여러개의 키와 값을 저장 가능 / 여러개 o 바꾸기 o
# 튜플 : 여러개의 데이터를 저장 가능 데이터가 중간에 바꿀 수 없다 / 여러개 o 바꾸기 x

# 28. join 함수
# 정의 : 문자열을 합쳐 주는 함수이다
# 사용방법 : "기준".join(리스트명)

# 29. \n  \t
# 정의 : \n : 줄바꿈  \t : 들여쓰기

# 30. 튜플
# 리스트와 비슷
# 특징 : 값을 바꿀 수 없다
# 사용방법 : 튜플명 = ( 값1 , 값2 , 값3 )  또는  튜플명 = 값1 , 값2 , 값3

# 31. 튜플을 리스트로 변경 하는 방법
# 리스트명 = list(튜플명)

# 32. 리스트을 튜플로 변경 하는 방법
# 튜플명= tuple(리스트명)

# 33. 튜플 언패킹
# 정의 : 리스트,딕셔너리,튜플을 기준에 따라 나눈다
# 사용방법 : *a,b = 원하는저장장치 또는 _,_,원하는저장장치

# 34. 딕셔너리 추가 방법
# 정의 : 딕셔너리에 누가하느 것이다
# 사용방법 : 딕셔너리명[키] = 값

# 35. 딕셔너리 키를 이용한 출력
# 사용방법 : print(딕셔너리명[키])

# 36. 딕셔너리 수정
# 사용방법 : 딕셔너리명[키] = 바꿀 값

# 37. 딕셔너리 삭제
# 사용방법 : del 딕셔너리명[키]

# 38. 딕셔너리의 여러개의 값 저장 방법
# 사용방법 : 딕셔너리명 = { 키1:[값1.1,값1.2],키2:[값2.1,값2.2] }

# 39. 딕셔너리의 여러개의 값중 하나만 출력하기
# 사용방법 : print(딕셔너리명[키][원하는 값의 인덱스]

# 40. keys 함수
# 정의 : 딕셔너리의 키만 모아주는 함수이다
# 사용방법 : 딕셔너리명.keys()

# 41. values 함수
# 정의 : 딕셔너리의 값만 모아주는 함수이다
# 사용방법 : 딕셔너리명.valuse

# 42. 딕셔너리 합치기 dict zip
# 정의 : 두개의 딕셔너리을 합치는 함수이다 튜플과 리스트 둘다 가능
# 사용방법 : 딕셔너리명 = dict(zip(키,값))

# 43. update 함수
# 정의 : 딕셔너리 두개를 함치는 함수이다
# 사용방법 : 딕셔너리명.update(합칠 딕셔너리명)

# 연산자
# 산술연산자 : + 더하기 -빼기 * 곱하기 / 나누기[몫] % 나누기[나머지]
# 비교연산자 : > 초과 < 미만 <= 이하 >= 이상 == 같다 != 같지않다
# 논리연산자 : and 이면서 or 이거나 ! 부정
# 대입연산자 : = [ 오른쪽을 왼쪽에 대입 ]
#            += [ 오른쪽을 왼쪽에 더하기 ]
#            -= [ 오른쪽을 왼쪽에 뺴기 ]
#            *= /= %= 등등..
# if 활용
# 정의 : 조전에 맞고 틀리고를 구별한다
# 사용방법 :
            # if 학년 = 3 :
            #    if 성별 = 남 :
            #        학년이 3 이면서 남학생
            #    else :
            #        학년이 3 이면서 여학생
            # else :
            #   if 성별 = 남 :
            #       3학년이 아니면서 남학생
            #   else :
            #       3학년이 아니면서 여학생

# input() 함수
# 정의 : 변수의 값을 입력 받기 위한 함수이다
# 사용방법 : 변수명 = input()

# if 변수 in 리스트
# 정의 : 변수가 리스트 안에 들어있는지 판단하기 위한 변수이다
# 사용방법 : if 변수명 in 리스트명 :
